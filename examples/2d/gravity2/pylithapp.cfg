[pylithapp]

# This is not a self-contained simulation configuration file. This
# file only specifies the general parameters common to the simulations
# in this directory.

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Turn on some journals to show progress.
[pylithapp.journal.info]
timedependent = 1
implicit = 1
petsc = 1
solverlinear = 1
meshiocubit = 1
implicitelasticity = 1
faultcohesivekin = 1
fiatsimplex = 1
pylithapp = 1
materials = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOCubit

[pylithapp.mesh_generator.reader]
filename = mesh.exo
coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set problem dimension.
dimension = 2

# Turn off elastic prestep.
elastic_prestep = False

# Turn on gravity for all problems.
gravity_field = spatialdata.spatialdb.GravityField
gravity_field.gravity_dir = [0.0, -1.0, 0.0]

# Use nonlinear solver to verify convergence.
formulation.solver = pylith.problems.SolverNonlinear

[pylithapp.timedependent.formulation.time_step]
# Define the total time for the simulation and the time step size.
total_time = 8000.0*year
dt = 10*year

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set bc to an array of 3 boundary conditions:
#   'edge_xpos'
#   'edge_xneg'
#   'edge_yneg'
bc = [edge_xpos,edge_xneg,edge_yneg]

# For all boundaries, we fix the displacement normal to the boundary
# (roller boundary condition) by retaining the default ZeroDispDB,
# which specifies a zero value.
#
# The label corresponds to the name of the nodeset in CUBIT.

# East boundary
[pylithapp.timedependent.bc.edge_xpos]
bc_dof = [0]
label = edge_xpos
db_initial.label = Dirichlet BC on +x boundary

# West boundary
[pylithapp.timedependent.bc.edge_xneg]
bc_dof = [0]
label = edge_xneg
db_initial.label = Dirichlet BC on -x boundary

# Bottom boundary
[pylithapp.timedependent.bc.edge_yneg]
bc_dof = [1]
label = edge_yneg
db_initial.label = Dirichlet BC on bottom boundary

db_initial = spatialdata.spatialdb.UniformDB
db_initial.values = [displacement-y]
db_initial.data = [1.0*m]

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.timedependent]

# Set materials to an array of 2 materials:
#   'crust'
#   'mantle'
materials = [crust,mantle]

[pylithapp.timedependent.materials]
# Set bulk constitutive model for each material.
crust = pylith.materials.ElasticPlaneStrain
mantle = pylith.materials.MaxwellPlaneStrain

# Crust
[pylithapp.timedependent.materials.crust]
label = Elastic crust

# The id corresponds to the block number from CUBIT.
id = 1

db_properties = spatialdata.spatialdb.UniformDB
db_properties.label = Viscoelastic properties
db_properties.values = [density, vs, vp, viscosity]
db_properties.data = [2500.0*kg/m**3, 3.0*km/s, 5.19615*km/s, 7.10046e+19*Pa*s]

db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.label = Initial stress in mantle
db_initial_stress.iohandler.filename = grav_isostatic.spatialdb
db_initial_stress.query_type = linear

# We are doing 2D quadrature for a triangle.
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2


# Mantle
[pylithapp.timedependent.materials.mantle]
label = Viscoelastic mantle

# The id corresponds to the block number from CUBIT.
id = 2

db_properties = spatialdata.spatialdb.UniformDB
db_properties.label = Viscoelastic properties
db_properties.values = [density, vs, vp, viscosity]
db_properties.data = [2500.0*kg/m**3, 3.0*km/s, 5.19615*km/s, 7.10046e+19*Pa*s]

db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.label = Initial stress in mantle
db_initial_stress.iohandler.filename = grav_isostatic.spatialdb
db_initial_stress.query_type = linear

db_initial_state = spatialdata.spatialdb.SimpleDB
db_initial_state.label = Initial state in mantle
db_initial_state.iohandler.filename = grav_isostatic.spatialdb
db_initial_state.query_type = linear

# We are doing 2D quadrature for a triangle.
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Names of output files are set in stepXX.cfg. We consolidate all of the
# output settings that are common to all of the simulations here.

[pylithapp.timedependent.formulation]
# Set the output to an array of 2 output managers.
# We will output the solution over the domain and the ground surface.
output = [domain,groundsurf]

# Set subdomain component to OutputSolnSubset (subset of domain).
output.groundsurf = pylith.meshio.OutputSolnSubset

# Domain
[pylithapp.problem.formulation.output.domain]
vertex_data_fields = [displacement,velocity]
writer = pylith.meshio.DataWriterHDF5

# Ground surface
[pylithapp.problem.formulation.output.groundsurf]
vertex_data_fields = [displacement,velocity]
label = edge_ypos ; Name of CUBIT nodeset for ground surface.
writer = pylith.meshio.DataWriterHDF5

# Materials
[pylithapp.timedependent.materials.crust.output]
cell_filter = pylith.meshio.CellFilterAvg
output_freq = time_step
time_step = 4.99999*year
writer = pylith.meshio.DataWriterHDF5
cell_data_fields = [cauchy_stress,total_strain]

[pylithapp.timedependent.materials.mantle.output]
cell_filter = pylith.meshio.CellFilterAvg
output_freq = time_step
time_step = 4.99999*year
writer = pylith.meshio.DataWriterHDF5
cell_data_fields = [cauchy_stress,total_strain,viscous_strain]

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]

# Preconditioner settings.
pc_type = ml

# Convergence parameters.
ksp_rtol = 1.0e-50
ksp_atol = 1.0e-12

# Linear solver monitoring options.
ksp_monitor = true
ksp_monitor_true_residual = true
#ksp_view = true
ksp_converged_reason = true
ksp_error_if_not_converged = true

# Nonlinear solver monitoring options.
snes_rtol = 1.0e-50
snes_atol = 1.0e-10
snes_max_it = 100
snes_monitor = true
#snes_view = true
snes_converged_reason = true
snes_linesearch_monitor = true
#snes_error_if_not_converged = true

# PETSc summary -- useful for performance information.
#log_summary = true


# End of file
