[pylithapp]

# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------
#
# This simulation computes viscoelastic relaxation from loading by
# gravitational body forces computed in Step 5.
#
# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------
#
# This is not a self-contained simulation configuration file. This
# file specifies only the boundary conditions for the simulation. The
# general quasi-static and mesh parameters are specificed in the
# pylithapp.cfg file which PyLith reads by default.
#
# To run the simulation:
# pylith step06.cfg
#
# Output will be directed to directory output.

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
elastic_prestep = False

[pylithapp.timedependent.formulation.time_step]
total_time = 200.0*year
dt = 5.0*year

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem.materials.continent_crust]
db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.label = Initial stress in continental crust
db_initial_stress.iohandler.filename = grav_stress-concrust.spatialdb
db_initial_stress.query_type = nearest

[pylithapp.problem.materials.continent_mantle]
db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.label = Initial stress in continental mantle
db_initial_stress.iohandler.filename = grav_stress-conmantle.spatialdb
db_initial_stress.query_type = nearest

#db_initial_state = spatialdata.spatialdb.SimpleDB
#db_initial_state.label = Initial stress in continental mantle
#db_initial_state.iohandler.filename = grav_stress-conmantle.spatialdb
#db_initial_state.query_type = nearest

[pylithapp.problem.materials.ocean_crust]
db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.label = Initial stress in oceanic crust
db_initial_stress.iohandler.filename = grav_stress-oceancrust.spatialdb
db_initial_stress.query_type = nearest

[pylithapp.problem.materials.ocean_mantle]
db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.label = Initial stress in oceanic mantle
db_initial_stress.iohandler.filename = grav_stress-oceanmantle.spatialdb
db_initial_stress.query_type = nearest

#db_initial_state = spatialdata.spatialdb.SimpleDB
#db_initial_state.label = Initial stress in oceanic mantle
#db_initial_state.iohandler.filename = grav_stress-oceanmantle.spatialdb
#db_initial_state.query_type = nearest

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set bc to an array of 5 boundary conditions:
bc = [boundary_east_crust,boundary_east_mantle,boundary_west,boundary_bottom_mantle,boundary_bottom_slab]

# Set gravity field (default is None)
gravity_field = spatialdata.spatialdb.GravityField
gravity_field.gravity_dir = [0,-1,0]

# For all boundaries, we fix the displacement normal to the boundary
# (roller boundary condition) by retaining the default ZeroDispDB,
# which specifies a zero value.
#
# The label corresponds to the name of the nodeset in CUBIT.

# East boundary (crust)
[pylithapp.problem.bc.boundary_east_crust]
bc_dof = [0]
label = bndry_east_crust
db_initial.label = Dirichlet BC on east boundary (crust)

# East boundary (mantle)
[pylithapp.problem.bc.boundary_east_mantle]
bc_dof = [0]
label = bndry_east_mantle
db_initial.label = Dirichlet BC on east boundary (mantle)

# West boundary
[pylithapp.problem.bc.boundary_west]
bc_dof = [0]
label = bndry_west_incslab
db_initial.label = Dirichlet BC on west boundary

# Bottom boundary (mantle)
[pylithapp.problem.bc.boundary_bottom_mantle]
bc_dof = [1]
label = bndry_bot_mantle
db_initial.label = Dirichlet BC on bottom boundary (mantle)

# Bottom boundary (slab)
[pylithapp.problem.bc.boundary_bottom_slab]
bc_dof = [1]
label = bndry_bot_slab
db_initial.label = Dirichlet BC on bottom boundary (slab)

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Domain
[pylithapp.problem.formulation.output.domain]
writer.filename = output/step06.h5

# Ground surface
[pylithapp.problem.formulation.output.subdomain]
writer.filename = output/step06-groundsurf.h5

# Materials
[pylithapp.problem.materials.continent_crust.output]
writer.filename = output/step06-concrust.h5

[pylithapp.problem.materials.continent_mantle.output]
writer.filename = output/step06-conmantle.h5

[pylithapp.problem.materials.ocean_crust.output]
writer.filename = output/step06-oceancrust.h5

[pylithapp.problem.materials.ocean_mantle.output]
writer.filename = output/step06-oceanmantle.h5


# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
# Switch to the algebraic multigrid preconditioner.

[pylithapp.problem.formulation]
matrix_type = aij

[pylithapp.petsc]
pc_type = lu

# End of file
