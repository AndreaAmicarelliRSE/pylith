# -*- Python -*- (syntax highlighting)
# ----------------------------------------------------------------------
#
# Brad T. Aagaard, U.S. Geological Survey
# Charles A. Williams, GNS Science
# Matthew G. Knepley, University of Chicago
#
# This code was developed as part of the Computational Infrastructure
# for Geodynamics (http://geodynamics.org).
#
# Copyright (c) 2010-2017 University of California, Davis
#
# See COPYING for license information.
#
# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------
#
# This problem focuses on viscoelastic relaxation from coseismic slip
# on a patch in the middle of the top of the slab. We prescribe
# uniform fault slip on the slab fault rupture patch with zero
# displacement on the lateral and bottom boundaries.
#
# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------
#
# Parameter files:
#   - pylithapp.cfg (common paramters, read by default)
#   - step02.cfg (main parameter file for step02)
#   - mat_viscoelastic.cfg (material models and parameters)
#   - solver_fieldsplit.cfg (field split solver settings)
#
# We use the field split preconditioner with algebraic multigrid for
# the displacement fields and the custom preconditioner for the
# Lagrange multiplier field. We use these solver settings in several
# simulations, so we put them in a separate file.
#
# To run the simulation:
# pylith step02.cfg mat_viscoelastic.cfg solver_fieldsplit.cfg
#
# Output will be directed to the "output" directory.

# ----------------------------------------------------------------------
# Output of parameters used and simulation progress.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step02-parameters.json
problem.progress_monitor.filename = output/step02-progress.txt

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem.formulation.time_step]
# Define the total time for the simulation and the time step size.
total_time = 200.0*year
dt = 10.0*year

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# We constrain the DOF normal to each of the boundaries.
#
# Array of boundary conditions (defaults to DirichletBC):
#   x_neg (ZeroDispDB to specify zero x-displacement)
#   x_pos (ZeroDispDB to specify zero x-displacement)
#   y_neg (ZeroDispDB to specify zero y-displacement)
#   y_pos (ZeroDispDB to specify zero y-displacement)
#   z_neg (ZeroDispDB to specify zero z-displacement)
bc = [x_neg, x_pos, y_neg, y_pos, z_neg]

# The label corresponds to the name of the nodeset in CUBIT.

# -x face
[pylithapp.problem.bc.x_neg]
bc_dof = [0]
label = boundary_xneg
db_initial.label = Dirichlet BC on -x

# +x face
[pylithapp.problem.bc.x_pos]
bc_dof = [0]
label = boundary_xpos
db_initial.label = Dirichlet BC on +x

# -y face
[pylithapp.problem.bc.y_neg]
bc_dof = [1]
label = boundary_yneg
db_initial.label = Dirichlet BC on -y

# +y face
[pylithapp.problem.bc.y_pos]
bc_dof = [1]
label = boundary_ypos
db_initial.label = Dirichlet BC on +y

# -z face
[pylithapp.problem.bc.z_neg]
bc_dof = [2]
label = boundary_zneg
db_initial.label = Dirichlet BC on -z

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.problem]
# We prescribe slip on the slab fault patch.
interfaces = [slab]

[pylithapp.problem.interfaces]
slab = pylith.faults.FaultCohesiveKin

[pylithapp.problem.interfaces.slab]
label = fault_slabtop_patch
edge = fault_slabtop_patch_edge

# We must define the quadrature information for fault cells.
# The fault cells are 2D (surface).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2

# The slip time and final slip are defined in spatial databases.
[pylithapp.problem.interfaces.slab.eq_srcs.rupture.slip_function]
slip = spatialdata.spatialdb.UniformDB
slip.label = Final slip
slip.values = [left-lateral-slip, reverse-slip, fault-opening]
slip.data = [-1.0*m, 4.0*m, 0.0*m] 

slip_time = spatialdata.spatialdb.UniformDB
slip_time.label  = Slip initiation time
slip_time.values = [slip-time]
slip_time.data = [9.999*year] 

[pylithapp.problem.interfaces.slab.output]
writer = pylith.meshio.DataWriterHDF5
writer.filename = output/step02-fault-slab.h5
vertex_info_fields = [normal_dir, strike_dir, dip_dir, final_slip_rupture]

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------

# Domain and subdomain output ------------------------------------------
[pylithapp.problem.formulation.output.domain]
writer.filename = output/step02-domain.h5

[pylithapp.problem.formulation.output.subdomain]
writer.filename = output/step02-groundsurf.h5

# Material output ------------------------------------------------------
[pylithapp.problem.materials.slab.output]
writer.filename = output/step02-slab.h5

[pylithapp.problem.materials.wedge.output]
writer.filename = output/step02-wedge.h5

[pylithapp.problem.materials.crust.output]
writer.filename = output/step02-crust.h5

[pylithapp.problem.materials.mantle.output]
writer.filename = output/step02-mantle.h5


# End of file
